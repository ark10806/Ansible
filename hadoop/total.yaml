---
- hosts: datanodes
  gather_facts: no
  vars:
    password: 'hi1234'
    uname: 'hi'
  user: hadoop
  tasks:
    - name: Create User "{{ uname }}"
      become: yes
      user:
        name: "{{ uname }}"
        password: "{{ password | password_hash('sha512') }}"
        group: sudo 

    - name: mkdir .ssh
      become: yes
      file:
        path: "/home/{{ uname }}/.ssh"
        state: directory

    - name: touch authorized_keys
      become: yes
      file:
        path: "/home/{{ uname }}/.ssh/authorized_keys"
        state: touch
    
    - name: put pubk
      become: yes
      lineinfile:
        path: "/home/{{ uname }}/.ssh/authorized_keys"
        line: "{{ pubkey }}"

- hosts: datanodes
  gather_facts: no
  vars:
    uname: hi
  user: "{{ uname }}"
  tasks:
    - name: mkdir opt/java
      file:
        path: "~/opt/java"
        state: directory
    - name: wget openjdk8
      get_url:
        url: "http://pred.ga/archives/java/java-8-openjdk-armhf.zip"
        dest: "~/opt/java/openjdk8_armhf.zip"

    - name: unzip openjdk8
      unarchive:
        src: "~/opt/java/openjdk8_armhf.zip"
        dest: "~/opt/java/"
        remote_src: True
    
    - name: create link openjdk8
      file:
        src: "~/opt/java/java-8-openjdk-armhf"
        dest: "~/opt/java/openjdk8"
        state: link
        owner: hi
    
    - name: set env var jdk8
      blockinfile:
        dest: "~/.bashrc"
        block: |
          export JAVA_HOME=~/opt/java/openjdk8
        create: yes
        marker: "## ANSIBLE java env"

- hosts: datanodes
  gather_facts: no
  vars:
    uname: hi
  user: "{{ uname }}"
  pre_tasks:
    - name: Check hadoop.tar.gz
      stat:
        path: "/home/{{ uname }}/opt/hadoop-1.2.1.tar.gz"
      register: isHadoopZip

    - name: Check hadoop dir
      stat:
        path: "/home/{{ uname }}/opt/hadoop-1.2.1"
      register: isHadoopDir

  tasks:
    - name: wget hadoop-1.2.1
      get_url:
        url: "https://archive.apache.org/dist/hadoop/common/hadoop-1.2.1/hadoop-1.2.1.tar.gz"
        dest: "/home/{{ uname }}/opt/"
      when: not isHadoopZip.stat.exists

    - name: unzip hadoop
      unarchive:
        remote_src: True
        src: "/home/{{ uname }}/opt/hadoop-1.2.1.tar.gz"
        dest: "/home/{{ uname }}/opt/"
      when: not isHadoopDir.stat.exists

    - name: link hadoop
      file:
        src: "/home/{{ uname }}/opt/hadoop-1.2.1"
        dest: "/home/{{ uname }}/opt/hadoop"
        state: link
        owner: "{{ uname }}"

    - name: env hadoop
      blockinfile:
        dest: "~/.bashrc"
        block: |
          export HADOOP_HOME=/home/hi/opt/hadoop
          export HADOOP_MAPRED_HOME=$HADOOP_HOME
          export HADOOP_HDFS_HOME=$HADOOP_HOME
          export YARN_HOME=$HADOOP_HOME
          export HADOOP_CONF_DIR=$HADOOP_HOME/conf
          export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
        create: yes
        state: present
        marker: "## ANSIBLE hadoop env"
